# Use the official maven/Amazon Corretto 19 image to create a build artifact.
FROM maven:3.9-amazoncorretto-19 AS build

# Set the working directory.
WORKDIR /usr/src/microservices

# Copy the entire project folder.
COPY . .

# Build the order module.
RUN mvn clean install -pl order -am -DskipTests

# Use the official Amazon Corretto 19 alpine image for a lean production stage of our multi-stage build.
FROM amazoncorretto:19-alpine3.17

# Set the working directory.
WORKDIR /app

# Copy the built artifact from the build stage.
COPY --from=build /usr/src/microservices/order/target/*.jar app.jar

# Set the required environment variables for the production environment.
ENV SERVER_PORT=""
ENV SPRING_DATASOURCE_URL=""
ENV SPRING_DATASOURCE_USERNAME=""
ENV SPRING_DATASOURCE_PASSWORD=""
ENV SPRING_JPA_HIBERNATE_DDL_AUTO=""
ENV SPRING_RABBITMQ_USERNAME=""
ENV SPRING_RABBITMQ_PASSWORD=""
ENV SPRING_RABBITMQ_LISTENER_SIMPLE_ACKNOWLEDGE_MODE=""
ENV SPRING_KAFKA_BOOTSTRAP_SERVERS=""
ENV SPRING_KAFKA_CONSUMER_GROUP_ID=""
ENV SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET=""
ENV SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER=""
ENV SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER=""
ENV ORDER_CQRS_TOPIC=""
ENV ORDER_CQRS_COMPENSATION_TOPIC=""

# Expose the port.
EXPOSE 8082

# Run the application.
CMD ["java", "-jar", "app.jar"]

