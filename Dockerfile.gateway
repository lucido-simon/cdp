# Use the official maven/Amazon Corretto 19 image to create a build artifact.
FROM maven:3.9-amazoncorretto-19 AS build

# Set the working directory.
WORKDIR /usr/src/microservices

# Copy the entire project folder.
COPY . .

# Build the gateway module.
RUN mvn clean install -pl gateway -am -DskipTests

# Use the official Amazon Corretto 19 alpine image for a lean production stage of our multi-stage build.
FROM amazoncorretto:19-alpine3.17

# Set the working directory.
WORKDIR /app

# Copy the built artifact from the build stage.
COPY --from=build /usr/src/microservices/gateway/target/*.jar app.jar

# Set the required environment variables for the production environment.
ENV SERVER_PORT=""
ENV GRPC_CLIENT_GLOBAL_NEGOTIATION_TYPE=""
ENV SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_ENABLED=""
ENV SPRING_CLOUD_GATEWAY_GLOBALCORS_ALLOWED_ORIGINS=""
ENV GRPC_CLIENT_CATALOG_SERVICE_ADDRESS=""
ENV ORDER_SERVICE_BASEURL=""
ENV GRPC_CLIENT_CART_SERVICE_ADDRESS=""
ENV GRPC_CLIENT_INVENTORY_SERVICE_ADDRESS=""
ENV PAYMENT_SERVICE_BASEURL=""
ENV SHIPPING_SERVICE_BASEURL=""
ENV SPRING_RABBITMQ_LISTENER_SIMPLE_ACKNOWLEDGE_MODE=""
ENV SPRING_RABBITMQ_USERNAME=""
ENV SPRING_RABBITMQ_PASSWORD=""

# Expose the port.
EXPOSE 8080

# Run the application.
CMD ["java", "-jar", "app.jar"]

